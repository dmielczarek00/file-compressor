name: Deploy Backend

on:
  push:
    branches:
      - dawid-branch

jobs:
  deploy:
    runs-on: [self-hosted, dawid-runner]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t k8s-master:5000/backend-mock:${{ github.sha }} ./backend-mock
          docker tag k8s-master:5000/backend-mock:${{ github.sha }} k8s-master:5000/backend-mock:latest

      - name: Push Docker image
        run: |
          docker push k8s-master:5000/backend-mock:${{ github.sha }}
          docker push k8s-master:5000/backend-mock:latest

      - name: Set up kubeconfig
        run: |
          mkdir -p /opt/actions-runner/.kube
          echo "${{ secrets.KUBECONFIG_DAWID }}" > /opt/actions-runner/.kube/config
          chmod 600 /opt/actions-runner/.kube/config

      - name: Deploy to Kubernetes
        run: |
          export KUBECONFIG=/opt/actions-runner/.kube/config
          kubectl apply -f backend-mock/backend-mock-deployment.yml
          kubectl rollout restart deployment/backend-mock-deployment
          kubectl rollout status deployment/backend-mock-deployment

      - name: Deploy scaling script
        run: |
          mkdir -p /opt/actions-runner/crontab
          cp backend-scaler.sh /opt/actions-runner/crontab/backend-scaler.sh
          chmod +x /opt/actions-runner/crontab/backend-scaler.sh

      - name: Add scaling script to crontab
        run: |
          if ! crontab -l 2>/dev/null | grep -q 'backend-scaler.sh'; then
            (crontab -l 2>/dev/null; \
             echo '* * * * * /opt/actions-runner/crontab/backend-scaler.sh; sleep 15; /opt/actions-runner/crontab/backend-scaler.sh; sleep 15; /opt/actions-runner/crontab/backend-scaler.sh; sleep 15; /opt/actions-runner/crontab/backend-scaler.sh') \
            | crontab -
          fi